---
- name: Actualizar Servidores
  hosts: all
  become: true
  become_method: runas
  become_user: administrator  # Reemplaza con el nombre de usuario apropiado

  tasks:
    - name: Descargar e instalar actualizaciones de Windows
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
        reboot: true
      tags:
        - updates
      # Descripción: Esta tarea utiliza el módulo `win_updates` para descargar e instalar actualizaciones de seguridad y críticas en los servidores Windows.
      # Además, se solicitará un reinicio si es necesario.

    - name: Esperar a que los servidores se reinicien
      wait_for_connection:
        delay: 300
        timeout: 600
      when: pending_updates.reboot_required
      tags:
        - updates
      # Descripción: Esta tarea utiliza el módulo `wait_for_connection` para esperar a que los servidores se reinicien después de instalar las actualizaciones.
      # Si se detecta que se requiere un reinicio, esta tarea esperará hasta que la conexión con los servidores se restablezca.

    - name: Verificar si quedan actualizaciones pendientes después del reinicio
      win_updates:
        state: searched
      register: pending_updates
      tags:
        - updates
      # Descripción: Esta tarea utiliza el módulo `win_updates` para verificar si quedan actualizaciones pendientes después de que los servidores se reiniciaron.
      # La información sobre las actualizaciones pendientes se almacena en la variable `pending_updates`.

    - name: Mostrar listado de actualizaciones pendientes
      debug:
        var: pending_updates.updates
      when: pending_updates.updates is defined and pending_updates.updates | length > 0
      tags:
        - updates
      # Descripción: Esta tarea utiliza el módulo `debug` para mostrar el listado de actualizaciones pendientes en caso de que haya alguna.
      # Se ejecutará solo si hay actualizaciones pendientes detectadas.

    - name: Crear archivo de log de actualizaciones
      win_shell: |
        "{{ pending_updates.updates | join('\n') }}" | Out-File -FilePath "C:\Ruta\Al\ArchivoDeLog.txt" -Append -Encoding utf8
      when: pending_updates.updates is defined and pending_updates.updates | length > 0
      tags:
        - updates
      # Descripción: Esta tarea utiliza el módulo `win_shell` para crear un archivo de log que contiene el listado de actualizaciones pendientes.
      # El archivo se ubica en la ruta especificada.

    - name: Finalizar playbook si no hay actualizaciones pendientes
      meta: end_play
      when: pending_updates.updates is not defined or pending_updates.updates | length == 0
      tags:
        - updates
      # Descripción: Esta tarea utiliza la tarea `meta: end_play` para finalizar el playbook si no hay actualizaciones pendientes.
      # Evita ejecutar tareas innecesarias si no hay actualizaciones para aplicar.
